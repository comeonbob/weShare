<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>How to use Hexo.</title>
      <link href="/2018/04/02/hello-world/"/>
      <url>/2018/04/02/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      <categories>
          
          <category> Bob </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端自动化 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>webpack优化实战</title>
      <link href="/2018/03/29/webpack%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%98/"/>
      <url>/2018/03/29/webpack%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%98/</url>
      <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>随着项目的推移， 第三库使用数量增加，业务代码更是成倍增加，不知不觉发现webpack构建速度却越来越慢，从当初的30s，变成5分钟以上。 与此同时，一个同学的项目也遇到了打包慢的问题。 于是下定决心，花两周潜心研究下如何提升webpack构建性能。</p><h2 id="初步成果"><a href="#初步成果" class="headerlink" title="初步成果"></a>初步成果</h2><p>两周后，收获满满的。初步战果如下：<br>（1） 自己的项目： vue2(全家桶)+element-ui+axios+echarts+lodash+…  约120个页面<br> dev：从90s+ 优化到  41s<br> product: 从9分钟+ 优化到 43s<br>（2） 同学的项目： react + redux + antd + moment+ rc-table + …  约40个页面<br>dev:  从2分钟+ 优化到 12s<br>product: 从9分钟+优化到 13s</p><h2 id="总结优化方法"><a href="#总结优化方法" class="headerlink" title="总结优化方法"></a>总结优化方法</h2><p>首先，优化思路是从webpack构建过程去分析，主要是解析和压缩优化。</p><h4 id="分析工具"><a href="#分析工具" class="headerlink" title="分析工具"></a>分析工具</h4><p>(1)  <strong>webpack-bundle-analyzer</strong><br>可视化查看打包后的文件，以及文件包含的内容。<br>主要注意两点： </p><ol><li>每个打包后文件的大小，其实业务代码chunk包一般在20k以内。如果大了，就可能是把第三方库打包进去了。</li><li>打包后的文件是否有重复引用的库，应该提出来。<br><strong>举个栗子</strong>：<br><em>优化前</em><br><img src="https://img-blog.csdn.net/2018040310240360?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2JvYl9iYW9iYW8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="可视化打包文件"><br>从图中我们发现，打包后的文件中， 很多包含了node_modulles/echarts, zrender两个库。 此时，我们就可以用DllPlugin插件，把这两个第三方库提出来， 减少单个业务代码页面打包后的文件大小， 避免重复编译。</li></ol><p><em>优化后</em><br><img src="https://img-blog.csdn.net/20180403102945389?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2JvYl9iYW9iYW8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>提取第三方库后，我们发现页面小了很多。 这时候又发现很多个文件都包含了公共代码src/utils/_serivce.js , 这种公共的业务代码也是常见的问题， 通常有以下几种办法</p><ul><li>按需加载  import { a } from xxx, 每个页面只引用需要的。需要配合export使用，修改源文件导出方式。</li><li>公用方法挂载到根实例, 如vue中， Vue.prototype._utils = _utils 。 也需要修改源文件，且不宜过大。</li><li>Tree Shaking  打包后，抖落掉不需要的代码， 不用修改源码。</li></ul><p>（2）<strong>webpack  - -profile</strong><br>可以查看打包过程中，每个步骤的速度。如果某个步骤卡了很长时间，就把对应关键字放到github上搜索， 可以发现一些很好的解决方法。<br>其中，同学的那个项目，打包过程中卡住在91% additional asset processing， 而且卡住了几分钟。 后来在github的webpack项目的issue中找到解决办法， 升级webpack版本至2.7, 以及把extract-text-webpack-plugin库升级至2.1.2。 居然一下快了几分钟~</p><hr><p>另外， 把优化方法分成通用，开发，生产三类。<br>优先级从高到低，如下：</p><h4 id="通用优化"><a href="#通用优化" class="headerlink" title="通用优化"></a>通用优化</h4><ol><li><p><strong>使用 DllPlugin</strong><br>原理是把第三方库文件分离出来单独编译，并且缓存; 极大的减少业务页面的编译时间， 以及编译后的文件大小。<br>优化时间： 3分钟+<br>详细：<br><a href="https://webpack.js.org/plugins/dll-plugin/" target="_blank" rel="noopener">https://webpack.js.org/plugins/dll-plugin/</a> （官网）<br><a href="https://www.cnblogs.com/ghost-xyx/p/6472578.html" target="_blank" rel="noopener">https://www.cnblogs.com/ghost-xyx/p/6472578.html</a></p></li><li><p><strong>升级webpack和node</strong><br>(1) webpack最新版本为v4+， 官方称对比v3, 性能提升了60%。这次优化时，还是用v2.7， 因为升级v4失败了。<br>优化时间：待实践。<br>详细: <a href="https://blog.csdn.net/qq_26733915/article/details/79446460" target="_blank" rel="noopener">https://blog.csdn.net/…</a><br>(2) 升级node， node目前稳定版本为v8.9.4。保持最新版本能够保证编译性能，npm保持最新也能建立更高效的模块树以及提高解析速度。<br>优化时间：30s+<br>详细：<a href="https://www.cnblogs.com/xinjie-just/p/7061619.html" target="_blank" rel="noopener">www.cnblogs.com/xinjie</a></p></li><li><p><strong>多线程解析</strong><br>(1) happypack, 多线程解析文件，如babel-loader等耗时较长的。<br>还可以配合cache-loader使用。<br>优化时间： 15s左右<br>详细： <a href="https://github.com/amireh/happypack" target="_blank" rel="noopener">https://github.com/amireh/happypack</a><br>要求： webpack 2+<br>(2) thread-loader: 还没实践过，原理也是多线程解析。<br>优化时间： 待实践<br>详细： <a href="https://webpack.js.org/loaders/thread-loader/" target="_blank" rel="noopener">https://webpack.js.org/loaders/thread-loader/</a></p></li><li><p><strong>缓存</strong><br>cache-loader<br>优化时间： 约5s<br>详细： <a href="https://webpack.js.org/loaders/cache-loader/" target="_blank" rel="noopener">https://webpack.js.org/loaders/cache-loader/</a></p></li><li><p><strong>提取公共代码</strong><br>CommonsChunkPlugin<br>这次实践中使用了CommonsChunkPlugin，并没有什么明显效果， 然后就换成了DllPlugin。<br>也许，这两个项目都是单页应用，多页应用可能效果比较好。还是个疑惑的地方~<br>优化时间： 待实践<br>详细： <a href="https://webpack.js.org/plugins/commons-chunk-plugin/" target="_blank" rel="noopener">https://webpack.js.org/plugins/commons-chunk-plugin/</a></p></li><li><p><strong>其它</strong><br>（1） loaders应尽可能配置解析路径include参数，排除路径exclude参数， 减少解析时查询范围。<br>（2） Tree Shaking. 按需加载思想差不多，去掉多余的代码。<br>优化时间： 待实践。<br>详细： <a href="https://webpack.js.org/guides/tree-shaking/" target="_blank" rel="noopener">https://webpack.js.org/guides/tree-shaking/</a><br>（3） 第三库的选择， 尽量少用，或用精简的库替代；一些工具函数，最好用原生替代。</p></li></ol><h4 id="开发环境优化"><a href="#开发环境优化" class="headerlink" title="开发环境优化"></a>开发环境优化</h4><ol><li>在内存中编译 webpack-dev-middleware等</li><li>devtool 设置成cheap-module-eval-source-map， 已经能满足调试需求， 编译能更快。<br>优化时间： 10s 左右</li></ol><h4 id="生产环境优化"><a href="#生产环境优化" class="headerlink" title="生产环境优化"></a>生产环境优化</h4><ol><li><strong>多线程压缩</strong><br>库： webpack-parallel-uglify-plugin<br>顾名思义， 多线程压缩，配合缓存大大减少了压缩时间，替代了自带的UglifyJsPlugin<br>优化时间： 40s+<br>详细： <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">// 多线程压缩插件</span><br><span class="line">const ParallelUglifyPlugin = require(&apos;webpack-parallel-uglify-plugin&apos;);</span><br><span class="line"></span><br><span class="line">plugins: [</span><br><span class="line">    new ParallelUglifyPlugin(&#123;</span><br><span class="line">      cacheDir: &apos;.cache/&apos;,</span><br><span class="line">      uglifyJS:&#123;</span><br><span class="line">        output: &#123;</span><br><span class="line">          comments: false</span><br><span class="line">        &#125;,</span><br><span class="line">        compress: &#123;</span><br><span class="line">          dead_code: true,</span><br><span class="line">          warnings: false,</span><br><span class="line">          drop_debugger: true,</span><br><span class="line">          drop_console: true</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      sourceMap: false</span><br><span class="line">    &#125;)</span><br><span class="line">   ]</span><br></pre></td></tr></table></figure></li></ol><p>2.<strong>多线程编译</strong><br>库： parallel-webpack<br>优化时间： 待实践<br>详细： <a href="https://github.com/trivago/parallel-webpack" target="_blank" rel="noopener">https://github.com/trivago/parallel-webpack</a></p><p>3.<strong>去掉source-map</strong><br>大多数情况，生产环境不需要详细源码。<br>优化时间： 10s+</p><h2 id="分享优化过程"><a href="#分享优化过程" class="headerlink" title="分享优化过程"></a>分享优化过程</h2><p>解决问题的思路有时候更重要</p><ol><li>很多技术官网是解决问题最快的方式， 如webpack构建优化<a href="https://webpack.js.org/guides/build-performance/" target="_blank" rel="noopener">官网文章</a></li><li>针对大部分第三方库的疑难杂症，在github上对应该库的issue，是最快解决问题的地方</li><li>一时没有找到解决办法， 休息一下，下次也许就会有不一样的理解。</li></ol><h2 id="立个flag"><a href="#立个flag" class="headerlink" title="立个flag"></a>立个flag</h2><ul><li>尽快完成待实践的技术部分，出下一篇优化文章。</li><li>研究优化首页加载。</li></ul><hr><ul><li>Date :   2018-04-03</li><li>Author : Bob</li></ul>]]></content>
      
      <categories>
          
          <category> Bob </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端自动化 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>AngularJS directive详解</title>
      <link href="/2018/03/28/AngularJs%20directive%E8%AF%A6%E8%A7%A3/"/>
      <url>/2018/03/28/AngularJs%20directive%E8%AF%A6%E8%A7%A3/</url>
      <content type="html"><![CDATA[<p>最近，维护一个Angular 1项目，在用过vue中element-ui后， 想自己也写一些类似组件；同时对比下angular的指令，与vue的单文件组件的用法。<br>今天的主题就是编写一个消息框 messageBox.<br><a id="more"></a></p><p><img src="http://img.blog.csdn.net/20180129202300074?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYm9iX2Jhb2Jhbw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><h2 id="如何开始构思组件"><a href="#如何开始构思组件" class="headerlink" title="如何开始构思组件"></a>如何开始构思组件</h2><p>(1) 组件的结构（html）</p><p>分析消息框组件的结构，首先想到的是，头部（标题+关闭按钮）， 主体（提示内容），底部（取消，确认按钮）;<br>后来考虑到遮罩问题， 所以还需要增加一个遮罩层。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cmp-message-box-wrap"</span> <span class="attr">ng-show</span>=<span class="string">"isShow"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cmp-message-box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"mb-title"</span> <span class="attr">ng-bind</span>=<span class="string">"mbtitle"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"mb-close-icon"</span> <span class="attr">ng-click</span>=<span class="string">"closeClick()"</span>&gt;</span>&amp;#8855<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"mb-content"</span> <span class="attr">ng-bind</span>=<span class="string">"mbcontent"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"mb-btn-wrap"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"mb-cancel"</span> <span class="attr">ng-bind</span>=<span class="string">"cancelBtnText"</span> <span class="attr">ng-click</span>=<span class="string">"cancelClick()"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"mb-confirm"</span> <span class="attr">ng-bind</span>=<span class="string">"confirmBtnText"</span> <span class="attr">ng-click</span>=<span class="string">"confirmClick()"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"mb-mask"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>(2) 组件的样式</p><p>可能遇到难点，遮罩样式层级问题。整个外层是fixed，层级最低； 遮罩也是fixed， 层级高一点；消息框居中，层级最高。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* MessageBox 消息框 */</span></span><br><span class="line"><span class="selector-class">.cmp-message-box-wrap</span> &#123;<span class="attribute">position</span>: fixed; <span class="attribute">top</span>: <span class="number">0</span>; <span class="attribute">left</span>: <span class="number">0</span>; <span class="attribute">z-index</span>: <span class="number">9997</span>; <span class="attribute">width</span>: <span class="number">100%</span>; <span class="attribute">height</span>: <span class="number">100%</span>; <span class="attribute">text-align</span>: center; <span class="attribute">overflow</span>: hidden; <span class="attribute">font-weight</span>: normal; &#125;</span><br><span class="line"><span class="selector-class">.cmp-message-box-wrap</span> <span class="selector-class">.mb-mask</span>&#123; <span class="attribute">position</span>: fixed; <span class="attribute">z-index</span>: <span class="number">9998</span>; <span class="attribute">width</span>: <span class="number">100%</span>; <span class="attribute">height</span>: <span class="number">100%</span>; <span class="attribute">opacity</span>: <span class="number">0.7</span>; <span class="attribute">background-color</span>: <span class="number">#303133</span>; &#125;</span><br><span class="line"><span class="selector-class">.cmp-message-box-wrap</span> <span class="selector-class">.cmp-message-box</span>&#123; <span class="attribute">position</span>: fixed; <span class="attribute">z-index</span>: <span class="number">9999</span>; <span class="attribute">width</span>: <span class="number">420px</span>; <span class="attribute">top</span>: <span class="number">40%</span>; <span class="attribute">background-color</span>: <span class="number">#fff</span>; <span class="attribute">display</span>: inline-block; <span class="attribute">margin-left</span>: -<span class="number">210px</span>; <span class="attribute">text-align</span>: left; <span class="attribute">border-radius</span>: <span class="number">4px</span>; <span class="attribute">padding</span>: <span class="number">15px</span>; &#125;</span><br><span class="line"><span class="selector-class">.cmp-message-box-wrap</span> <span class="selector-class">.cmp-message-box</span> <span class="selector-tag">header</span>&#123; <span class="attribute">font-size</span>: <span class="number">18px</span>; <span class="attribute">color</span>: <span class="number">#303133</span>; <span class="attribute">position</span>: relative; &#125;</span><br><span class="line"><span class="selector-class">.cmp-message-box-wrap</span> <span class="selector-class">.cmp-message-box</span> <span class="selector-tag">header</span> <span class="selector-class">.mb-close-title</span>&#123; <span class="attribute">font-size</span>: <span class="number">18px</span>; <span class="attribute">color</span>: <span class="number">#303133</span>; &#125;</span><br><span class="line"><span class="selector-class">.cmp-message-box-wrap</span> <span class="selector-class">.cmp-message-box</span> <span class="selector-tag">header</span> <span class="selector-class">.mb-close-icon</span>&#123; <span class="attribute">position</span>: absolute; <span class="attribute">right</span>: <span class="number">0</span>; <span class="attribute">top</span>: -<span class="number">1px</span>; <span class="attribute">color</span>: <span class="number">#abadb2</span>; <span class="attribute">cursor</span>: pointer;&#125;</span><br><span class="line"><span class="selector-class">.cmp-message-box-wrap</span> <span class="selector-class">.cmp-message-box</span> <span class="selector-tag">header</span> <span class="selector-class">.mb-close-icon</span><span class="selector-pseudo">:hover</span>&#123; <span class="attribute">color</span>: <span class="number">#909399</span>; &#125;</span><br><span class="line"><span class="selector-class">.cmp-message-box-wrap</span> <span class="selector-class">.cmp-message-box</span> <span class="selector-class">.mb-content</span>&#123; <span class="attribute">margin-top</span>: <span class="number">15px</span>; <span class="attribute">color</span>: <span class="number">#606266</span>; <span class="attribute">font-size</span>: <span class="number">14px</span>; <span class="attribute">line-height</span>: <span class="number">24px</span>; &#125;</span><br><span class="line"><span class="selector-class">.cmp-message-box-wrap</span> <span class="selector-class">.cmp-message-box</span> <span class="selector-class">.mb-btn-wrap</span>&#123; <span class="attribute">margin-top</span>: <span class="number">15px</span>; <span class="attribute">color</span>: <span class="number">#606266</span>; <span class="attribute">text-align</span>: right; <span class="attribute">user-select</span>: none; &#125;</span><br><span class="line"><span class="selector-class">.cmp-message-box-wrap</span> <span class="selector-class">.cmp-message-box</span> <span class="selector-class">.mb-btn-wrap</span> <span class="selector-tag">span</span>&#123; <span class="attribute">padding</span>: <span class="number">9px</span> <span class="number">15px</span>; <span class="attribute">font-size</span>: <span class="number">12px</span>; <span class="attribute">border-radius</span>: <span class="number">3px</span>; <span class="attribute">cursor</span>: pointer; <span class="attribute">text-align</span>: center; <span class="attribute">color</span>: <span class="number">#606266</span>; <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#dcdfe6</span>; <span class="attribute">display</span>: inline-block; &#125;</span><br><span class="line"><span class="selector-class">.cmp-message-box-wrap</span> <span class="selector-class">.cmp-message-box</span> <span class="selector-class">.mb-btn-wrap</span> <span class="selector-class">.mb-cancel</span>&#123; <span class="attribute">margin-right</span>: <span class="number">10px</span>; &#125;</span><br><span class="line"><span class="selector-class">.cmp-message-box-wrap</span> <span class="selector-class">.cmp-message-box</span> <span class="selector-class">.mb-btn-wrap</span> <span class="selector-class">.mb-cancel</span><span class="selector-pseudo">:hover</span>&#123; <span class="attribute">background</span>: <span class="number">#e9e9e9</span>; &#125;</span><br><span class="line"><span class="selector-class">.cmp-message-box-wrap</span> <span class="selector-class">.cmp-message-box</span> <span class="selector-class">.mb-btn-wrap</span> <span class="selector-class">.mb-cancel</span><span class="selector-pseudo">:active</span>&#123; <span class="attribute">background</span>: <span class="number">#d6d3d3</span>; &#125;</span><br><span class="line"><span class="selector-class">.cmp-message-box-wrap</span> <span class="selector-class">.cmp-message-box</span> <span class="selector-class">.mb-btn-wrap</span> <span class="selector-class">.mb-confirm</span>&#123; <span class="attribute">background</span>: <span class="number">#7a7777</span>; <span class="attribute">color</span>: <span class="number">#fff</span>; &#125;</span><br><span class="line"><span class="selector-class">.cmp-message-box-wrap</span> <span class="selector-class">.cmp-message-box</span> <span class="selector-class">.mb-btn-wrap</span> <span class="selector-class">.mb-confirm</span><span class="selector-pseudo">:hover</span>&#123; <span class="attribute">background</span>: <span class="number">#8f8c8c</span>; &#125;</span><br><span class="line"><span class="selector-class">.cmp-message-box-wrap</span> <span class="selector-class">.cmp-message-box</span> <span class="selector-class">.mb-btn-wrap</span> <span class="selector-class">.mb-confirm</span><span class="selector-pseudo">:active</span>&#123; <span class="attribute">background</span>: <span class="number">#6b6868</span>; &#125;</span><br></pre></td></tr></table></figure><p>(3) 组件的功能</p><p>组件功能包括</p><ol><li>取消，关闭按钮， 消息框消失；</li><li>确认按钮，执行一件待定事情后， 消息框消失;</li><li>点击遮罩层，可以配置是否消失消息框</li></ol><p>(4) 逻辑编码<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">.directive(<span class="string">'messageBox'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="comment">// 声明形式</span></span><br><span class="line">        restrict: <span class="string">'AE'</span>,</span><br><span class="line">        <span class="comment">// 参数传递</span></span><br><span class="line">        scope: &#123;</span><br><span class="line">            <span class="comment">// 标题</span></span><br><span class="line">            mbtitle: <span class="string">'@'</span>,</span><br><span class="line">            <span class="comment">// 内容</span></span><br><span class="line">            mbcontent: <span class="string">'@'</span>,</span><br><span class="line">            <span class="comment">// 取消按钮文字</span></span><br><span class="line">            cancelBtnText: <span class="string">'@'</span>,</span><br><span class="line">            <span class="comment">// 确认按钮文字</span></span><br><span class="line">            confirmBtnText: <span class="string">'@'</span>,</span><br><span class="line">            <span class="comment">// 是否显示消息框</span></span><br><span class="line">            isShow: <span class="string">'='</span>,</span><br><span class="line">            <span class="comment">// 关闭回调</span></span><br><span class="line">            close: <span class="string">'&amp;'</span>,</span><br><span class="line">            <span class="comment">// 取消回调</span></span><br><span class="line">            cancel: <span class="string">'&amp;'</span>,</span><br><span class="line">            <span class="comment">// 确认回调</span></span><br><span class="line">            confirm: <span class="string">'&amp;'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">// 嵌入</span></span><br><span class="line">        transclude: <span class="literal">false</span>,</span><br><span class="line">        <span class="comment">// 模板</span></span><br><span class="line">        templateUrl:<span class="string">'/templates/messageBox.html'</span>,</span><br><span class="line">        <span class="comment">// 是否替换原有元素</span></span><br><span class="line">        replace: <span class="literal">true</span>,</span><br><span class="line">        <span class="comment">// 指令优先级</span></span><br><span class="line">        priority: <span class="number">100</span>,</span><br><span class="line">        <span class="comment">// 指令优先级终止</span></span><br><span class="line">        terminal: <span class="literal">false</span>,</span><br><span class="line">        <span class="comment">// 编译前执行，外部交互的api，指令间复用，数据初始化</span></span><br><span class="line">        controller: <span class="function"><span class="keyword">function</span>(<span class="params">$scope, $element, $attrs, $transclude</span>) </span>&#123;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">// 引用</span></span><br><span class="line">        <span class="built_in">require</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="comment">// 作用域与dom进行链接</span></span><br><span class="line">        link: <span class="function"><span class="keyword">function</span> (<span class="params">$scope, ele, attr</span>) </span>&#123;</span><br><span class="line">            <span class="comment">// 点击关闭</span></span><br><span class="line">            $scope.closeClick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $scope.close();</span><br><span class="line">                $scope.isShow = <span class="literal">false</span>;</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="comment">// 点击取消</span></span><br><span class="line">            $scope.cancelClick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $scope.cancel();</span><br><span class="line">                $scope.isShow = <span class="literal">false</span>;</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="comment">// 点击确认</span></span><br><span class="line">            $scope.confirmClick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $scope.confirm();</span><br><span class="line">                $scope.isShow = <span class="literal">false</span>;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><h2 id="消息框注册成全局"><a href="#消息框注册成全局" class="headerlink" title="消息框注册成全局"></a>消息框注册成全局</h2><p>Vue 中可以引入element-ui中的消息框， 然后挂载在vue的根实例上；<br>Angular 1中可以挂载到根作用域上$rootScope，html放在index.html中， 在.run()方法中初始化；</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">.run(<span class="function"><span class="keyword">function</span> (<span class="params">$rootScope</span>) </span>&#123;</span><br><span class="line">    <span class="comment">/* 初始化全局变量 */</span></span><br><span class="line">    <span class="comment">// 消息框</span></span><br><span class="line">    $rootScope.$messageBoxData = &#123;&#125;;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * @param &#123;*&#125; mbTitle 标题</span></span><br><span class="line"><span class="comment">     * @param &#123;*&#125; mbContent 内容</span></span><br><span class="line"><span class="comment">     * @param &#123;*&#125; mbCancelBtnText 取消按钮文字</span></span><br><span class="line"><span class="comment">     * @param &#123;*&#125; mbConfirmBtnText 确认按钮文字</span></span><br><span class="line"><span class="comment">     * @param &#123;*&#125; closeCb 关闭图标事件</span></span><br><span class="line"><span class="comment">     * @param &#123;*&#125; cancelCb 取消按钮事件</span></span><br><span class="line"><span class="comment">     * @param &#123;*&#125; confirmCb 确认按钮事件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    $rootScope.$messageBox = <span class="function"><span class="keyword">function</span> (<span class="params">mbTitle, mbContent, mbCancelBtnText, mbConfirmBtnText, closeCb, cancelCb, confirmCb</span>) </span>&#123;</span><br><span class="line">        $rootScope.$messageBoxData.isMessageBoxShow = <span class="literal">true</span>;</span><br><span class="line">        $rootScope.$messageBoxData.mbTitle = mbTitle;</span><br><span class="line">        $rootScope.$messageBoxData.mbContent = mbContent;</span><br><span class="line">        $rootScope.$messageBoxData.mbCancelBtnText = mbCancelBtnText;</span><br><span class="line">        $rootScope.$messageBoxData.mbConfirmBtnText = mbConfirmBtnText;</span><br><span class="line">        $rootScope.$messageBoxData.closeCb = closeCb;</span><br><span class="line">        $rootScope.$messageBoxData.cancelCb = cancelCb;</span><br><span class="line">        $rootScope.$messageBoxData.confirmCb = confirmCb;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>在任何controller中简单调用：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 删除对话框</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showDelDialog</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $rootScope.$messageBox(<span class="string">'删除'</span>, <span class="string">'确定删除吗？'</span>, <span class="string">'取消'</span>, <span class="string">'确定'</span>, <span class="literal">null</span>, <span class="literal">null</span>, delConfirm);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Angular-指令学习"><a href="#Angular-指令学习" class="headerlink" title="Angular 指令学习"></a>Angular 指令学习</h2><p>参考：</p><p><a href="https://segmentfault.com/a/1190000005851663" target="_blank" rel="noopener">https://segmentfault.com/a/1190000005851663</a></p><p><a href="https://www.cnblogs.com/ermu-learn/p/5913760.html" target="_blank" rel="noopener">https://www.cnblogs.com/ermu-learn/p/5913760.html</a></p><hr><p><em>Bob</em></p>]]></content>
      
      <categories>
          
          <category> Bob </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>canvas 的使用</title>
      <link href="/2018/01/29/canvas/"/>
      <url>/2018/01/29/canvas/</url>
      <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Canvas<br>获取绘图上下文<br>var gd = oC.getContext(‘2d’);</p><p>重新开始路径<br>gd.beginPath();</p><p>开始<br>gd.moveTo(x,y)<br>结束<br>gd.lineTo(x,y)</p><p>闭合路径<br>gd.closePath();</p><p>描边<br>gd.stroke()</p><p>描边颜色<br>gd.strokeStyle</p><p>线宽<br>gd.lineWidth</p><p>填充<br>gd.fill()</p><p>填充颜色<br>gd.fillStyle</p><p>清屏<br>gd.clearRect(x,y,w,h);</p><p>画矩形<br>    a)<br>        gd.rect(x,y,w,h);<br>        stroke()/fill()<br>    b)<br>        gd.fillRect(x,y,w,h)<br>    c)<br>        gd.strokeRect(x,y,w,h)</p><p>运动<br>先清屏，再画图</p><p>画弧<br>    gd.arc(cx,cy,r,s,e,b);<br>        cx,cy         圆心坐标<br>        r             半径<br>        s             开始弧度<br>        e             结束弧度<br>        b             是否逆时针<br>    gd.stroke()/fill();</p><p>饼图<br>    先求和<br>    求出每个数字的比例<br>    通过比例求出角度</p><p>改变线条端点样式<br>    gd.lineCap = round             圆<br>    gd.lineCap = butt             平</p><p>文字<br>    gd.font = ‘大小 字体类型’;<br>        必须一起设置，否则不生效<br>    gd.textAlign            水平对齐方式<br>    gd.textBaseline         基线对齐方式<br>        middle        中间对齐<br>    gd.fillText(str,x,y);         填充文字<br>    gd.strokeText(str,x,y);     描边文字<br>            位置是<br>                x         左侧<br>                y         基线</p><p>事件<br>    1.算位置<br>    2.gd.isPointInPath(pageX,pageY)<br>        总结：<br>            gd.isPointInPath只能给最后一个图形加</p><p>拖拽</p><p>渐变<br>    创建线性渐变<br>    var lg = gd.createLinearGradient(x1,y1,x2,y2);<br>    设置颜色<br>    lg.addColorStop(系数,颜色);</p><p>变形<br>    旋转         rotate<br>    平移         translate<br>    缩放         scale</p><pre><code>旋转    gd.rotate(弧度);平移    gd.translate(x,y);缩放    gd.scale(x,y);    画布左上角是原心,原心是不可以改变的。    操作的是整个画布    变形会叠加    操作完，画图，画完图之后，把画布还原回去还原画布    gd.save();             保存画布当前状态    gd.restore();         还原回保存的状态    如果要用变形        1.gd.save();    保存        2.操作        3.画图        4.gd.restore();    还原矩形左上角旋转    先保存    把画布偏移到左上角位置    旋转    画图     要画在0,0的位置    还原矩形中心旋转</code></pre><p>设置图片背景<br>    gd.createPattern(oImg,’平铺方式’);<br>                            no-repeat<br>                            repeat-x<br>                            repeat-y<br>                            repeat<br>    背景是从画布左上角走的</p><pre><code>导出图片    oC.toDataURL([mime-type]);    可以指定图片类型    oC.toDataURL(&apos;image/png&apos;);    oC.toDataURL(&apos;image/jpeg&apos;);</code></pre><p>引入图片<br>    gd.drawImage(oImg,dx,dy);</p><pre><code>gd.drawImage(    oImg,    dx,dy,[dw],[dh]);gd.drawImage(    oImg,    [sx],[sy],[sw],[sh],    dx,dy,[dw],[dh]);</code></pre><p>总结：<br>    canvas一切操作都在画图之前</p><p>像素级操作<br>    比较耗费性能，必须配合服务器环境<br>    var result = gd.getImageData(x,y,w,h);<br>    var d = result.data;<br>    d所有像素点<br>        四个为一组     r,g,b,a,r,g,b,a…</p><pre><code>操作完成，要还回去gd.putImageData(result,x,y);</code></pre><p>效果<br>    复古效果：<br>        d[i]=(r<em>0.393)+(g</em>0.769)+(b<em>0.189);     // red<br>        d[i+1]=(r</em>0.349)+(g<em>0.686)+(b</em>0.168);     // green<br>        d[i+2]=(r<em>0.272)+(g</em>0.534)+(b*0.131);     // blue<br>    红色蒙版效果：<br>        d[i]=(r+g+b)/3;        // 红色通道取平均值<br>        d[i+1]=d[i+2]=0;          // 绿色通道和蓝色通道都设为0</p><pre><code>图片曝光(高亮效果)：    d[i]+=200;    d[i+1]+=200;    d[i+2]+=200;颜色反转：    d[i]=255-d[i];    d[i+1]=255-d[i+1];    d[i+2]=255-d[i+2];    </code></pre><p>计算机图形学<br>像素级操作非常耗费性能，尽量少用。</p><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        *&#123;</span></span><br><span class="line"><span class="undefined">            margin: 0;</span></span><br><span class="line"><span class="undefined">            padding: 0;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">        html,body&#123;</span></span><br><span class="line"><span class="undefined">            height: 100%;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">        body&#123;</span></span><br><span class="line"><span class="undefined">            overflow: hidden;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">        canvas&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>:<span class="selector-id">#000</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">rnd</span>(<span class="params">n,m</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*(m-n)+n);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.addEventListener(<span class="string">'DOMContentLoaded'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oC=<span class="built_in">document</span>.querySelector(<span class="string">'canvas'</span>);</span></span><br><span class="line"><span class="javascript">            oC.width=<span class="built_in">document</span>.documentElement.clientWidth;</span></span><br><span class="line"><span class="javascript">            oC.height=<span class="built_in">document</span>.documentElement.clientHeight;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> gd=oC.getContext(<span class="string">'2d'</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> N=<span class="number">5</span>;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> Len=<span class="number">40</span>;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> aPoint=[];</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> aOldPoint=[];</span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;N;i++)&#123;</span></span><br><span class="line"><span class="undefined">                aPoint[i]=&#123;</span></span><br><span class="line"><span class="undefined">                    x:rnd(0,oC.width),</span></span><br><span class="line"><span class="undefined">                    y:rnd(0,oC.height),</span></span><br><span class="line"><span class="undefined">                    iSpeedX:rnd(-10,10),</span></span><br><span class="line"><span class="undefined">                    iSpeedY:rnd(-10,10)</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="javascript">            setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="undefined">                gd.clearRect(0,0,oC.width,oC.height);</span></span><br><span class="line"><span class="javascript">                <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;aPoint.length;i++)&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span>(aPoint[i].x&lt;<span class="number">0</span>||aPoint[i].x&gt;=<span class="built_in">document</span>.documentElement.clientWidth<span class="number">-1</span>)&#123;</span></span><br><span class="line"><span class="undefined">                        aPoint[i].iSpeedX*=-1;</span></span><br><span class="line"><span class="undefined">                    &#125;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span>(aPoint[i].y&lt;<span class="number">0</span>||aPoint[i].y&gt;=<span class="built_in">document</span>.documentElement.clientHeight<span class="number">-1</span>)&#123;</span></span><br><span class="line"><span class="undefined">                        aPoint[i].iSpeedY*=-1;</span></span><br><span class="line"><span class="undefined">                    &#125;</span></span><br><span class="line"><span class="undefined">                    aPoint[i].x+=aPoint[i].iSpeedX;</span></span><br><span class="line"><span class="undefined">                    aPoint[i].y+=aPoint[i].iSpeedY;</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;aPoint.length;i++)&#123;</span></span><br><span class="line"><span class="undefined">                    createPoint(aPoint[i]);</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="javascript">                gd.beginPath();<span class="comment">//一组矩形连接</span></span></span><br><span class="line"><span class="undefined">                gd.moveTo(aPoint[0].x,aPoint[0].y);</span></span><br><span class="line"><span class="javascript">                <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;aPoint.length;i++)&#123;</span></span><br><span class="line"><span class="undefined">                    gd.lineTo(aPoint[i].x,aPoint[i].y);</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">                gd.closePath();</span></span><br><span class="line"><span class="javascript">                gd.strokeStyle=<span class="string">'rgb(225,225,225)'</span>;</span></span><br><span class="line"><span class="undefined">                gd.stroke();</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> arr=[];</span></span><br><span class="line"><span class="javascript">                <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;aPoint.length;i++)&#123;</span></span><br><span class="line"><span class="undefined">                    arr[i]=&#123;</span></span><br><span class="line"><span class="undefined">                        x:aPoint[i].x,</span></span><br><span class="line"><span class="undefined">                        y:aPoint[i].y,</span></span><br><span class="line"><span class="undefined">                        iSpeedX:aPoint[i].iSpeedX,</span></span><br><span class="line"><span class="undefined">                        iSpeedY:aPoint[i].iSpeedY</span></span><br><span class="line"><span class="undefined">                    &#125;</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">                aOldPoint.push(arr);</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>(aOldPoint.length&gt;Len)&#123;</span></span><br><span class="line"><span class="undefined">                    aOldPoint.shift();</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;aOldPoint.length;i++)&#123;<span class="comment">//多组矩形连接</span></span></span><br><span class="line"><span class="undefined">                    gd.beginPath();</span></span><br><span class="line"><span class="undefined">                    gd.moveTo(aOldPoint[i][0].x,aOldPoint[i][0].y);</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">1</span>;j&lt;aOldPoint[i].length;j++)&#123;</span></span><br><span class="line"><span class="undefined">                        gd.lineTo(aOldPoint[i][j].x,aOldPoint[i][j].y);</span></span><br><span class="line"><span class="undefined">                    &#125;</span></span><br><span class="line"><span class="undefined">                    gd.closePath();</span></span><br><span class="line"><span class="javascript">                    gd.strokeStyle=<span class="string">'rgba(225,225,225,'</span>+i/Len+<span class="string">')'</span>;</span></span><br><span class="line"><span class="undefined">                    gd.stroke();</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;,30);</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">createPoint</span>(<span class="params">point</span>)</span>&#123;<span class="comment">//创建矩形</span></span></span><br><span class="line"><span class="undefined">                gd.beginPath();</span></span><br><span class="line"><span class="undefined">                gd.rect(point.x,point.y,1,1);</span></span><br><span class="line"><span class="javascript">                gd.fillStyle=<span class="string">'#fff'</span>;</span></span><br><span class="line"><span class="undefined">                gd.fill();</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,<span class="literal">false</span>)</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> emfan </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Flex</title>
      <link href="/2017/10/12/Flex/"/>
      <url>/2017/10/12/Flex/</url>
      <content type="html"><![CDATA[<p><strong>目前常见的布局方式有固定布局，流动布局，css3增加了弹性布局。</strong></p><p>所谓固定布局，就是网站的内容宽度是一定的，即容器的宽度是固定的，容器内的块宽度是像素</p><p>或者百分百，无论怎样缩放网页，容器的宽度始终不变。</p><p>所谓流动布局，也叫流体布局，即容器的宽度一般设为百分百的形式，根据屏幕的分辨率网页适应</p><p>不同的宽度。</p><a id="more"></a><p>以前网站设计大多采用这两种，但随着移动端的发展，各种各样的屏幕分辨率需要适应时，这两种</p><p>布局也出现了明显的缺点，首先，固定布局若屏幕宽度小于容器宽度时，会出现滚动条，甚至直接</p><p>无法展示，而流动布局若在屏幕分辨率很小时，会给用户很不好的体验，因此，弹性布局应运而生。</p><h2 id="弹性布局"><a href="#弹性布局" class="headerlink" title="弹性布局"></a>弹性布局</h2><p>所谓弹性布局，即可根据屏幕大小调节容器大小，开发者无需固定容器内块的宽度，只需声明其布局</p><p>行为，比如，横向排列，纵向排列，元素间隔，对齐方式，空间分配等。</p><p>例1：</p><p><img src="./flexbox.png" alt=""></p><p>上面是一个导航菜单，有三个选项，若此时产品经理要求我们去除第二个选项，只保留另外两个，我们</p><p>分别从三种布局分析：</p><h4 id="固定布局：宽度固定，去除第二个，总宽度也得跟着改变，影响页面布局。"><a href="#固定布局：宽度固定，去除第二个，总宽度也得跟着改变，影响页面布局。" class="headerlink" title="固定布局：宽度固定，去除第二个，总宽度也得跟着改变，影响页面布局。"></a>固定布局：宽度固定，去除第二个，总宽度也得跟着改变，影响页面布局。</h4><h4 id="流动布局：去除第二个，宽度需由原先的33-33-改为50-左右，改动大。"><a href="#流动布局：去除第二个，宽度需由原先的33-33-改为50-左右，改动大。" class="headerlink" title="流动布局：去除第二个，宽度需由原先的33.33%改为50%左右，改动大。"></a>流动布局：去除第二个，宽度需由原先的33.33%改为50%左右，改动大。</h4><p>以上两种布局，改动HTML的同时，还得改动css，麻烦，让我们看看弹性布局的写法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;flexbox&quot;&gt; </span><br><span class="line">    &lt;div&gt;游戏列表&lt;/div&gt;</span><br><span class="line">    &lt;div&gt;个人中心&lt;/div&gt;</span><br><span class="line">    &lt;div&gt;申请服务&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">.flexbox &#123;</span><br><span class="line">    width: 600px;</span><br><span class="line">    margin-top: 100px;</span><br><span class="line">    border: 1px solid red;</span><br><span class="line">    justify-content: space-around;</span><br><span class="line">    align-items: center;</span><br><span class="line">    display: flex;</span><br><span class="line">&#125;</span><br><span class="line">.flexbox div &#123;</span><br><span class="line">    flex: 1;</span><br><span class="line">    text-align: center;</span><br><span class="line">    border-right: 1px solid red;</span><br><span class="line">&#125;</span><br><span class="line">.flexbox &gt; div:last-child &#123;</span><br><span class="line">border-right: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在flex布局中，我们可以为子元素指定flex: 1定义所占空间大小，若子元素为3，则分成3份，若去除第二个选项，</p><p>则另外两个各占1/2，使用方便。</p><p><img src="./flexbox2.png" alt=""></p><h2 id="语法"><a href="#语法" class="headerlink" title="语法:"></a><strong>语法:</strong></h2><font color="red">采用Flex布局的元素称为Flex容器，以下简称容器。容器内的子元素称为Flex项目，以下简称项目。</font><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.flexbox &#123;</span><br><span class="line">  display：flex;</span><br><span class="line">  display: -weblit-flex;//WebKit内核</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面讲元素设为Flex容器,容器内有水平的主轴和垂直的纵轴。</p><p>另外，Flex容器内的项目的float,vertical-align,clear属性都会失效。</p><h4 id="容器的属性："><a href="#容器的属性：" class="headerlink" title="容器的属性："></a>容器的属性：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// 设置主轴方向</span><br><span class="line">flex-direction: row | row-reverse | column | column-reverse;</span><br><span class="line">// 轴线上的项目是否换行</span><br><span class="line">flex-wrap: nowrap | wrap | wrap-reverse;</span><br><span class="line">// 简写flex-direction和flex-wrap</span><br><span class="line">flex-flow: flex-direction || flex-wrap;</span><br><span class="line">// 项目在主轴的对齐方式</span><br><span class="line">justify-content: flex-start | flex-end | center | space-between | space-around;</span><br><span class="line">// 项目在纵轴的对齐方式</span><br><span class="line">align-items: flex-start | flex-end | center | baseline | stretch;</span><br><span class="line">// 项目在交叉轴的对齐方式</span><br><span class="line">align-content: flex-start | flex-end | center | space-between | space-around | stretch;</span><br></pre></td></tr></table></figure><h4 id="项目的属性："><a href="#项目的属性：" class="headerlink" title="项目的属性："></a>项目的属性：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// 项目的排列顺序。数值越小，排列越靠前，默认为0。</span><br><span class="line">order: &lt;integer&gt;;</span><br><span class="line">// 项目的放大比例，默认为0。</span><br><span class="line">flex-grow: &lt;number&gt;;</span><br><span class="line">// 项目的缩小比例，默认为。</span><br><span class="line">flex-shrink: &lt;number&gt;;</span><br><span class="line">// 项目占据的主轴空间。</span><br><span class="line">flex-basis: &lt;length&gt; | auto;</span><br><span class="line">// flex-grow, flex-shrink 和 flex-basis的简写。</span><br><span class="line">flex: none | [ &lt;&apos;flex-grow&apos;&gt; &lt;&apos;flex-shrink&apos;&gt;? || &lt;&apos;flex-basis&apos;&gt; ];</span><br><span class="line">// 单个项目有与其他项目不一样的对齐方式。</span><br><span class="line">align-self: auto | flex-start | flex-end | center | baseline | stretch;</span><br></pre></td></tr></table></figure><p>经典案例：骰子的实现:</p><p><img src="./dice.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">HTML:</span><br><span class="line">&lt;div class=&quot;content&quot;&gt;</span><br><span class="line">&lt;div class=&quot;first-dice&quot;&gt;</span><br><span class="line">&lt;div class=&quot;dot&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;second-dice&quot;&gt;</span><br><span class="line">&lt;div class=&quot;dot&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;dot&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;third-dice&quot;&gt;</span><br><span class="line">&lt;div class=&quot;dot&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;dot&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;dot&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;fourth-dice&quot;&gt;</span><br><span class="line">&lt;div class=&quot;column&quot;&gt;</span><br><span class="line">&lt;div class=&quot;dot&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;dot&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;column&quot;&gt;</span><br><span class="line">&lt;div class=&quot;dot&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;dot&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;fifth-dice&quot;&gt;</span><br><span class="line">&lt;div class=&quot;column&quot;&gt;</span><br><span class="line">&lt;div class=&quot;dot&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;dot&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;column&quot;&gt;</span><br><span class="line">&lt;div class=&quot;dot&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;column&quot;&gt;</span><br><span class="line">&lt;div class=&quot;dot&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;dot&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;sixth-dice&quot;&gt;</span><br><span class="line">&lt;div class=&quot;column&quot;&gt;</span><br><span class="line">&lt;div class=&quot;dot&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;dot&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;dot&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;column&quot;&gt;</span><br><span class="line">&lt;div class=&quot;dot&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;dot&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;dot&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">CSS:</span><br><span class="line">.content &#123;</span><br><span class="line">display: flex;</span><br><span class="line">width: 800px;</span><br><span class="line">flex-direction: row;</span><br><span class="line">justify-content: space-around;</span><br><span class="line">background-color: #000;</span><br><span class="line">&#125;</span><br><span class="line">[class$=&quot;dice&quot;] &#123;</span><br><span class="line">width: 100px;</span><br><span class="line">height: 100px;</span><br><span class="line">background-color: #e7e7e7;</span><br><span class="line">border-radius: 10%;</span><br><span class="line">margin: 10px 0;</span><br><span class="line">padding: 3px;</span><br><span class="line">box-shadow:</span><br><span class="line">    inset 0 5px white, </span><br><span class="line">    inset 0 -5px #bbb,</span><br><span class="line">    inset 5px 0 #d7d7d7, </span><br><span class="line">    inset -5px 0 #d7d7d7;</span><br><span class="line">&#125;</span><br><span class="line">.dot &#123;</span><br><span class="line">display: block;</span><br><span class="line">    width: 24px;</span><br><span class="line">    height: 24px;</span><br><span class="line">    border-radius: 50%;</span><br><span class="line">    margin: 4px;</span><br><span class="line">    background-color: #333;</span><br><span class="line">    box-shadow: inset 0 3px #111, inset 0 -3px #555;</span><br><span class="line">&#125;</span><br><span class="line">.first-dice &#123;</span><br><span class="line">display: flex;</span><br><span class="line">justify-content: center;</span><br><span class="line">align-items: center;</span><br><span class="line">&#125;</span><br><span class="line">.second-dice &#123;</span><br><span class="line">display: flex;</span><br><span class="line">justify-content: space-between;</span><br><span class="line">&#125;</span><br><span class="line">.second-dice .dot:nth-of-type(2) &#123;</span><br><span class="line">align-self: flex-end;</span><br><span class="line">&#125;</span><br><span class="line">.third-dice &#123;</span><br><span class="line">display: flex;;</span><br><span class="line">justify-content: center;</span><br><span class="line">&#125;</span><br><span class="line">.third-dice .dot:nth-of-type(3) &#123;</span><br><span class="line">align-self: flex-end;</span><br><span class="line">&#125;</span><br><span class="line">.third-dice .dot:nth-of-type(2) &#123;</span><br><span class="line">align-self: center;</span><br><span class="line">&#125;</span><br><span class="line">.fourth-dice,.fifth-dice, .sixth-dice &#123;</span><br><span class="line">display: flex;</span><br><span class="line">justify-content: space-between;</span><br><span class="line">&#125;</span><br><span class="line">.fourth-dice .column, .fifth-dice .column, .sixth-dice .column &#123;</span><br><span class="line">display: flex;</span><br><span class="line">flex-direction: column;</span><br><span class="line">justify-content: space-between;</span><br><span class="line">&#125;</span><br><span class="line">.fifth-dice .column:nth-of-type(2) &#123;</span><br><span class="line">align-self: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>详细用法可查看<a href="http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html" target="_blank" rel="noopener">阮一峰Flex 布局教程</a></p>]]></content>
      
      <categories>
          
          <category> Little </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>git命令入门</title>
      <link href="/2017/04/03/git/"/>
      <url>/2017/04/03/git/</url>
      <content type="html"><![CDATA[<h3 id="基础命令介绍"><a href="#基础命令介绍" class="headerlink" title="基础命令介绍"></a>基础命令介绍</h3><ul><li><p>从服务器上拉取代码<br>git clone <a href="https://github.com/comeonbob/weShare.git" target="_blank" rel="noopener">https://github.com/comeonbob/weShare.git</a></p></li><li><p>创建本地分支并且关联远程分支develop<br>git checkout develop</p></li><li><p>更新本地分支develop<br>git pull –ff</p></li></ul><ul><li><p>创建本地分支，并切换到feature<br>git checkout -b feature</p></li><li><p>提交代码<br>git commit -a -m “xxx”</p></li><li><p>切换开发分支拉取最新代码, 并返回feature分支(避免在develop分支上冲突)<br>git checkout develop<br>git pull –ff<br>git checkout feature</p></li><li><p>合并分支 rebase （可能产生冲突）<br>git rebase develop</p></li><li><p>切换至develop分支, 并合并分支<br>git checkout develop<br>git merge –no-ff feature</p></li><li><p>提交代码<br>git push</p></li></ul><hr><h3 id="其他参考学习"><a href="#其他参考学习" class="headerlink" title="其他参考学习"></a>其他参考学习</h3><ul><li><p>配置git, 保存户名、密码等</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(1) git config --list                    //查看当前git配置</span><br><span class="line">(2) git config credential.helper=store   //配置存储模式</span><br><span class="line">(3) git config user.name=<span class="string">'xxx.xx'</span>        //设置用户名</span><br><span class="line">(4) git config user.email=<span class="string">'xxx.xx'</span>       //设置email</span><br></pre></td></tr></table></figure></li><li><p>分支管理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(1) git branch -a                        //查看所有分支</span><br><span class="line">(2) git branch dev                       //创建本地分支</span><br><span class="line">(3) git branch -d dev                    //删除本地分支</span><br><span class="line">(3) git push origin dev                  //创建远程分支</span><br><span class="line">(4) git push origin --delete dev         //删除远程分支</span><br><span class="line">(5) git checkout -b dev origin/dev       //创建并切换本地dev分支，并关联远程dev分支</span><br><span class="line">(6) git branch --<span class="built_in">set</span>-upstream-to=origin dev       //本地分支关联远程dev分支</span><br></pre></td></tr></table></figure></li><li><p>提交分支、冲突解决</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">(1) git status                           //查看当前代码状态</span><br><span class="line">(2) git checkout a.js                    //复原a.js文件</span><br><span class="line">(3) git add .                            //添加所有文件</span><br><span class="line">(4) git clean -df                        //清除未添加文件</span><br><span class="line">(5) git commit -a -m <span class="string">"xx"</span>                //提交所有文件</span><br><span class="line">(6) git rebase develop                   //合并develop分支到当前分支</span><br><span class="line">(7) git rebase develop --<span class="built_in">continue</span>        //解决冲突后继续合并</span><br><span class="line">(8) git rebase develop --skip            //跳过冲突</span><br><span class="line">(9) git merge --no-ff feature -m <span class="string">""</span>      //合并feature分支到当前主分支</span><br><span class="line">(10) git pull --ff                       //更新最新代码</span><br><span class="line">(11) git push                            //推送本地代码</span><br><span class="line">(12) git <span class="built_in">clone</span> xxx                       //克隆远程分支到本地</span><br></pre></td></tr></table></figure></li></ul><hr><p><em>Bob</em></p>]]></content>
      
      <categories>
          
          <category> Bob </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端自动化 </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
